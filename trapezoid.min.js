function trapezoid(){var e={urlsToCache:[],processors:{GET:[]},processCache:function(n,t){n.waitUntil(caches.open(t).then(function(n){return n.addAll(e.urlsToCache)}))},doProcessor:function(e,n){return new Promise(function(t){var s={status:200,statusText:"OK",headers:{"Content-Type":"text/html"}},r={type:function(e){s["Content-Type"]=e},send:function(e){var n=new Response(e,s);t(n)}};e.fn(n,r)})},processFetch:function(n){n.respondWith(caches.match(n.request).then(function(t){if(t)return t;for(var s=n.request.method,r=n.request.url.substr(self.location.href.lastIndexOf("/")),o=e.processors[s],c=null,u=0;u<o.length;u++)if(o[u].path===r){c=o[u];break}return c?c.offline?new Promise(function(t){fetch(n.request).then(function(e){t(e)}).catch(function(){e.doProcessor(c,n.request).then(function(e){t(e)})})}):e.doProcessor(c,n.request):fetch(n.request)}))},get:function(n,t){e.processors.GET.push({path:n,fn:t})},offline:function(n,t){e.processors.GET.push({path:n,fn:t,offline:!0})},precache:function(n){Array.isArray(n)?e.urlsToCache=e.urlsToCache.concat(n):e.urlsToCache.push(n)},run:function(n){self.addEventListener("install",function(t){e.processCache(t,n)}),self.addEventListener("fetch",function(n){e.processFetch(n)})}};return e}
